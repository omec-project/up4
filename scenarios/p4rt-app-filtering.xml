<!--
 ~ SPDX-License-Identifier: LicenseRef-ONF-Member-1.0
 ~ SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>
  -->
<scenario name="p4rt-app-filtering" description="Forwarding test using p4runtime messages with application filtering">
    <group name="P4rt-App-Filtering">
        <group name="P4rt-Program-App-Filtering">
            <group name="Push-Up4-Flows-App-Filtering">
                <sequential var="${ENODEB#}"
                            starts="P4rt-Set-Fwd-Drop-App-Filtering-${#}"
                            ends="P4rt-Set-Fwd-Allow-Default-App-Filtering-${#-1}">
                    <step name="P4rt-Set-Fwd-Drop-App-Filtering-${#}"
                          exec="${DOCKER_COMPOSE_CMD} exec -T p4rt p4rt-up4-flows program --base ${#}0 --ctr-base ${#}5 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1 --app-prio 100 --app-id ${#}0 --app-l4-port ${#}00 --drop-ul True --drop-dl True"/>
                    <step name="P4rt-Set-Fwd-Allow-Default-App-Filtering-${#}" requires="P4rt-Set-Fwd-Drop-App-Filtering-${#}"
                        exec="${DOCKER_COMPOSE_CMD} exec -T p4rt p4rt-up4-flows program --base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                </sequential>
            </group>
            <step name="Check-Up4-Flows-1-App-Filtering" requires="Push-Up4-Flows-App-Filtering"
                  exec="onos-cli-grep ${OCI} up4:read-flows 'UL flows=${P4RT_UP4_FLOWS_APP_FILTER}, DL flows=${P4RT_UP4_FLOWS_APP_FILTER}'"/>
            <step name="Check-Up4-Flows-2-App-Filtering" requires="^"
                  exec="onos-cli-grep ${OCI} up4:read-flows 'Apps=${ENODEBS}'"/>
            <step name="Check-Flow-Rules-Fwd-App-Filtering" requires="^" delay="5"
                  exec="onos-check-flows ${OCI}"/>
        </group>
        <group name="Check-Traffic-Fwd-App-Filtering-Negative" requires="P4rt-Program-App-Filtering">
            <parallel var="${ENODEB#}">
                <!-- Downlink -->
                <step name="Downlink-Enb-Recv-Gtp-Drop-App-Filtering-${#}" requires="P4rt-Program-App-Filtering" env="!"
                      exec="mn-cmd ${ENODEB#} traffic.py recv-gtp -t 10 --teid-base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1 --pdn-port=${#}00"/>
                <step name="Downlink-Pdn-Send-Udp-Drop-App-Filtering-${#}" requires="P4rt-Program-App-Filtering" delay="5"
                      exec="mn-cmd pdn traffic.py send-udp -c 10 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1 --pdn-port=${#}00"/>
                <!-- Uplink -->
                <step name="Uplink-Pdn-Recv-Udp-Drop-App-Filtering-${#}" requires="P4rt-Program-App-Filtering" env="!"
                      exec="mn-cmd pdn traffic.py recv-udp -t 10 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                <step name="Uplink-Enb-Send-Gtp-Drop-App-Filtering-${#}" requires="P4rt-Program-App-Filtering" delay="5"
                      exec="mn-cmd ${ENODEB#} traffic.py send-gtp -c 10 --teid-base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1 --pdn-port=${#}00"/>

            </parallel>
        </group>
        <group name="Check-Traffic-Fwd-App-Filtering-Positive" requires="~Check-Traffic-Fwd-App-Filtering-Negative">
            <parallel var="${ENODEB#}">
                <!-- Downlink -->
                <step name="Downlink-Enb-Recv-Gtp-Fwd-App-Filtering-${#}" requires="~Check-Traffic-Fwd-App-Filtering-Negative"
                      exec="mn-cmd ${ENODEB#} traffic.py recv-gtp -t 10 --teid-base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                <step name="Downlink-Pdn-Send-Udp-Fwd-App-Filtering-${#}" requires="~Check-Traffic-Fwd-App-Filtering-Negative" delay="5"
                      exec="mn-cmd pdn traffic.py send-udp -c 10 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                <!-- Uplink -->
                <step name="Uplink-Pdn-Recv-Udp-Fwd-App-Filtering-${#}" requires="~Check-Traffic-Fwd-App-Filtering-Negative"
                      exec="mn-cmd pdn traffic.py recv-udp -t 10 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                <step name="Uplink-Enb-Send-Gtp-Fwd-App-Filtering-${#}" requires="~Check-Traffic-Fwd-App-Filtering-Negative" delay="5"
                      exec="mn-cmd ${ENODEB#} traffic.py send-gtp -c 10 --teid-base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
            </parallel>
        </group>
        <group name="P4rt-Clear-Fwd-App-Filtering" requires="~Check-Traffic-Fwd-App-Filtering-Negative,~Check-Traffic-Fwd-App-Filtering-Positive">
            <group name="Clear-Up4-Flows-App-Filtering">
                <sequential var="${ENODEB#}"
                            starts="P4rt-Unset-Drop-App-Filtering-${#}"
                            ends="P4rt-Unset-Allow-Default-App-Filtering-${#-1}">
                    <step name="P4rt-Unset-Drop-App-Filtering-${#}" requires="~Check-Traffic-Fwd-App-Filtering-Negative,~Check-Traffic-Fwd-App-Filtering-Positive"
                          exec="${DOCKER_COMPOSE_CMD} exec -T p4rt p4rt-up4-flows clear --base ${#}0 --ctr-base ${#}5 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1 --app-prio 100 --app-id ${#}0 --app-l4-port ${#}00 --drop-ul True --drop-dl True"/>
                    <step name="P4rt-Unset-Allow-Default-App-Filtering-${#}" requires="~Check-Traffic-Fwd-App-Filtering-Negative,~Check-Traffic-Fwd-App-Filtering-Positive"
                          exec="${DOCKER_COMPOSE_CMD} exec -T p4rt p4rt-up4-flows clear --base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                </sequential>
            </group>
            <step name="Check-Up4-Flows-Fwd-Cleared-1-App-Filtering" requires="Clear-Up4-Flows-App-Filtering"
                  exec="onos-cli-grep ${OCI} up4:read-flows 'UL flows=0, DL flows=0'"/>
            <step name="Check-Up4-Flows-Fwd-Cleared-2-App-Filtering" requires="^"
                  exec="onos-cli-grep ${OCI} up4:read-flows 'Apps=0'"/>
            <step name="Check-Flow-Rules-Fwd-Cleared-App-Filtering" requires="^" delay="5"
                  exec="onos-check-flows ${OCI}"/>
        </group>
    </group>
</scenario>