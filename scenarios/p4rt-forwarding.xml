<!--
 ~ SPDX-License-Identifier: LicenseRef-ONF-Member-1.0
 ~ SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
  -->
<scenario name="p4rt-forwarding" description="Forwarding test using p4runtime messages">
    <group name="P4rt-Forwarding">
        <group name="P4rt-Program">
            <group name="Push-Up4-Flows">
                <sequential var="${ENODEB#}"
                            starts="P4rt-Set-Fwd-${#}"
                            ends="P4rt-Set-Fwd-${#-1}">
                    <step name="P4rt-Set-Fwd-${#}"
                          exec="${DOCKER_COMPOSE_CMD} exec -T p4rt p4rt-up4-flows program --base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                </sequential>
            </group>
            <step name="Check-Up4-Flows-Fwd" requires="Push-Up4-Flows"
                  exec="onos-cli-grep ${OCI} up4:read-flows 'UL flows=${P4RT_UP4_FLOWS}, DL flows=${P4RT_UP4_FLOWS}'"/>
            <step name="Check-Flow-Rules-Fwd" requires="^" delay="5"
                  exec="onos-check-flows ${OCI}"/>
        </group>
        <group name="Check-Traffic-Fwd" requires="P4rt-Program">
            <parallel var="${ENODEB#}">
                <!-- Downlink -->
                <step name="Downlink-Enb-Recv-Gtp-Fwd-${#}" requires="P4rt-Program"
                      exec="mn-cmd ${ENODEB#} traffic.py recv-gtp -t 10 --teid-base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                <step name="Downlink-Pdn-Send-Udp-Fwd-${#}" requires="P4rt-Program" delay="5"
                      exec="mn-cmd pdn traffic.py send-udp -c 10 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                <!-- Uplink -->
                <step name="Uplink-Pdn-Recv-Udp-Fwd-${#}" requires="P4rt-Program"
                      exec="mn-cmd pdn traffic.py recv-udp -t 10 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                <step name="Uplink-Enb-Send-Gtp-Fwd-${#}" requires="P4rt-Program" delay="5"
                      exec="mn-cmd ${ENODEB#} traffic.py send-gtp -c 10 --teid-base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
            </parallel>
        </group>
        <group name="P4rt-Clear-Fwd" requires="~Check-Traffic-Fwd">
            <group name="Clear-Up4-Flows">
                <sequential var="${ENODEB#}"
                            starts="P4rt-Unset-Fwd-${#}"
                            ends="P4rt-Unset-Fwd-${#-1}">
                    <step name="P4rt-Unset-Fwd-${#}" requires="~Check-Traffic-Fwd"
                          exec="${DOCKER_COMPOSE_CMD} exec -T p4rt p4rt-up4-flows clear --base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                </sequential>
            </group>
            <step name="Check-Up4-Flows-Fwd-Cleared" requires="Clear-Up4-Flows"
                  exec="onos-cli-grep ${OCI} up4:read-flows 'UL flows=0, DL flows=0'"/>
            <step name="Check-Flow-Rules-Fwd-Cleared" requires="^" delay="5"
                  exec="onos-check-flows ${OCI}"/>
        </group>
    </group>
</scenario>