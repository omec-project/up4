<!--
 ~ SPDX-License-Identifier: Apache-2.0
 ~ SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
  -->
<scenario name="pfcp-buffering" description="Test downlink data buffering works with PFCP messaging">
    <group name="Pfcp-Buffering">
        <step name="Push-Netcfg-Dbuf"
              exec="onos-netcfg ${OCI} ${UP4_ROOT}/scenarios/topo/netcfg-dbuf.json"/>
        <group name="Pfcp-Set-Buff-Create" requires="Push-Netcfg-Dbuf">
            <group name="Pfcp-Push-Buff-Create">
                <sequential var="${ENODEB#}"
                            starts="Pfcp-Buffer-Session-Create-${#}"
                            ends="Pfcp-Buffer-Session-Create-${#-1}">
                    <step name="Pfcp-Buffer-Session-Create-${#}" requires="Push-Netcfg-Dbuf" delay="5"
                          exec="mock-smf-cmd create --session-count 5 --base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                </sequential>
            </group>
            <step name="Check-Up4-Flows-Buff-Create" requires="Pfcp-Push-Buff-Create" delay="5"
                  exec="onos-cli-grep ${OCI} up4:read-flows 'UL flows=${PFCP_UP4_FLOWS}, DL flows=${PFCP_UP4_FLOWS}'"/>
            <step name="Check-Flow-Rules-Buff-Create" requires="Pfcp-Push-Buff-Create" delay="5"
                  exec="onos-check-flows ${OCI}"/>
        </group>
        <group name="Check-Traffic-Buff-Drop-DL" requires="Pfcp-Set-Buff-Create" delay="5">
            <parallel var="${ENODEB#}">
                <!-- Downlink -->
                <step name="Downlink-Enb-Recv-Gtp-Buff-Drop-DL-${#}" requires="Pfcp-Set-Buff-Create"
                      exec="mn-cmd ${ENODEB#} traffic.py recv-none -t 10"/>
                <step name="Downlink-Pdn-Send-Udp-Buff-Drop-DL-${#}" requires="Pfcp-Set-Buff-Create" delay="5"
                      exec="mn-cmd pdn traffic.py send-udp -c 10 --flow-count 5 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
            </parallel>
        </group>
        <group name="Pfcp-Set-Buff-Modify" requires="Check-Traffic-Buff-Drop-DL">
            <group name="Pfcp-Push-Buff-Modify">
                <sequential var="${ENODEB#}"
                            starts="Pfcp-Buffer-Session-Modify-${#}"
                            ends="Pfcp-Buffer-Session-Modify-${#-1}">
                    <step name="Pfcp-Buffer-Session-Modify-${#}" requires="Check-Traffic-Buff-Drop-DL" delay="5"
                          exec="mock-smf-cmd modify --session-count 5 --base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                </sequential>
            </group>
            <step name="Check-Up4-Flows-Buff-Modify" requires="Pfcp-Push-Buff-Modify" delay="5"
                  exec="onos-cli-grep ${OCI} up4:read-flows 'UL flows=${PFCP_UP4_FLOWS}, DL flows=${PFCP_UP4_FLOWS}'"/>
            <step name="Check-Flow-Rules-Buff-Modify" requires="Pfcp-Push-Buff-Modify" delay="5"
                  exec="onos-check-flows ${OCI}"/>
        </group>
        <group name="Pfcp-Set-Buff-Buffer" requires="Pfcp-Set-Buff-Modify">
            <group name="Pfcp-Push-Buff-Buffer">
                <sequential var="${ENODEB#}"
                            starts="Pfcp-Buffer-Session-Buffer-${#}"
                            ends="Pfcp-Buffer-Session-Buffer-${#-1}">
                    <step name="Pfcp-Buffer-Session-Buffer-${#}" requires="Pfcp-Set-Buff-Modify" delay="5"
                          exec="mock-smf-cmd modify --buffer --notifycp --session-count 5 --base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                </sequential>
            </group>
            <step name="Check-Up4-Flows-Buff-Buffer" requires="Pfcp-Push-Buff-Buffer" delay="5"
                  exec="onos-cli-grep ${OCI} up4:read-flows 'UL flows=${PFCP_UP4_FLOWS}, DL flows=${PFCP_UP4_FLOWS}'"/>
            <step name="Check-Flow-Rules-Buff-Buffer" requires="Pfcp-Push-Buff-Buffer" delay="5"
                  exec="onos-check-flows ${OCI}"/>
        </group>
        <group name="Check-Traffic-Buff" requires="Pfcp-Set-Buff-Buffer" delay="5">
            <parallel var="${ENODEB#}">
                <!-- Check Downlink only -->
                <step name="Downlink-Pdn-Send-Udp-Buff-${#}"
                      exec="mn-cmd pdn traffic.py send-udp -c 5 --flow-count 5 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                <!-- FIXME: grep log tail to allow running scenarios in development where there can be
                        many FIRST_BUFFER in the log  -->
                <step name="Verify-First-Buffer-${#}" requires="^"
                      exec="docker-log-grep ${ODI} 'Received FIRST_BUFFER: ueAddress=17.0.${#-1}' 5"/>
                <!-- -t 30 to wait enough time for packets to be released after Pfcp-Set-Fwd-After-Buff -->
                <!-- Not going to verify TEID in buffering test -->
                <step name="Downlink-Enb-Recv-Gtp-Buff-${#}" requires="Verify-First-Buffer-${#}"
                      exec="mn-cmd ${ENODEB#} traffic.py recv-gtp -t 60 --no-verify-teid --flow-count 5 --teid-base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                <step name="Pfcp-Set-Fwd-After-Buff-${#}" requires="Verify-First-Buffer-${#}" delay="5"
                      exec="mock-smf-cmd modify --session-count 5 --sleep-time 1 --base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                <step name="Check-Drain-Started-${#}" requires="Pfcp-Set-Fwd-After-Buff-${#}" delay="5"
                      exec="docker-log-grep ${ODI} 'Started dbuf drain for 17.0.${#-1}' 5"/>
                <step name="Check-Drain-Completed-${#}" requires="Pfcp-Set-Fwd-After-Buff-${#}" delay="5"
                      exec="docker-log-grep ${ODI} 'Dbuf drain completed for 17.0.${#-1}' 5"/>
            </parallel>
        </group>
        <group name="Pfcp-Clear-Buff" requires="~Check-Traffic-Buff">
            <group name="Clear-Buff">
                <sequential var="${ENODEB#}"
                            starts="Pfcp-Unset-Fwd-After-Buff-${#}"
                            ends="Pfcp-Unset-Fwd-After-Buff-${#-1}">
                    <step name="Pfcp-Unset-Fwd-After-Buff-${#}"
                          exec="mock-smf-cmd delete --session-count 5 --base ${#}0 --ue-pool 17.0.${#-1}.0/24 --enb-addr 140.0.10${#-1}.1"/>
                </sequential>
            </group>
            <step name="Check-Up4-Flows-Fwd-After-Buff-Cleared" requires="Clear-Buff"
                  exec="onos-cli-grep ${OCI} up4:read-flows 'UL flows=0, DL flows=0'"/>
            <step name="Check-Flow-Rules-Fwd-After-Buff-Cleared" requires="Clear-Buff" delay="5"
                  exec="onos-check-flows ${OCI}"/>
        </group>
    </group>
</scenario>