<!--
 ~ SPDX-License-Identifier: LicenseRef-ONF-Member-1.0
 ~ SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
  -->
<scenario name="setup" description="Environment setup">
    <group name="Setup">
        <step name="Docker-Compose-Up" exec="${DOCKER_COMPOSE_CMD} up -d"/>

        <step name="Mn-Wait-For-Start-Dbuf"
              exec="file-grep tmp/dbuf_dbuf1.log 'Listening for gRPC requests'"
              requires="Docker-Compose-Up"/>
        <parallel var="${SW#}">
            <step name="Mn-Wait-For-Start-${SW#}"
                  exec="file-grep tmp/${SW#}/stratum_bmv2.log 'Stratum external facing services are listening to'"
                  requires="Docker-Compose-Up"/>
        </parallel>

        <group name="Onos-Wait-For-Ready" requires="Docker-Compose-Up">
            <parallel var="${OD#}">
                <step name="Onos-Wait-For-Start-${#}" exec="onos-wait-for-start ${OD#}"
                      requires="Docker-Compose-Up"/>
                <!-- tost image should come with up4 pre-installed -->
                <step name="Up4-App-Wait-For-Pre-Installed-${#}" requires="Onos-Wait-For-Start-${#}"
                      exec="docker-log-grep ${ODI} 'Application org.omecproject.up4 has been installed'"/>
                <!-- Add current users key for passwordless SSH access to the ONOS CLI
                required by most onos-* commands -->
                <step name="Onos-User-Key-${#}" exec="onos-user-key ${OD#}"
                      requires="~Onos-Wait-For-Start-${#}"/>
                <!-- Wait for bundle refresh (caused by optional protobuf dependency in Netty) -->
                <!-- FIXME: this is a known issue that affects ONOS >= 2.5. Remove step once the issue will be fixed. -->
                <step name="Onos-Wait-Bundle-Refresh-${#}"
                      exec="docker-log-grep ${OD#} 'org.jboss.netty/3.10.5.Final (Should be wired to: org.onosproject.com_google_protobuf_protobuf_java'"
                      requires="Onos-Wait-For-Start-${#}"/>
                <!-- Wait for cluster READY status -->
                <step name="Onos-Wait-For-Ready-${#}" exec="onos-cli-grep ${OCI} nodes '${OD#}.*READY'"
                      requires="Onos-Wait-Bundle-Refresh-${#}"/>
                <!-- Wait for startup apps to be installed and active -->
                <step name="Onos-Check-Apps-${#}"
                      exec="onos-check-apps ${OC#} ${ONOS_APPS} includes"
                      requires="Onos-Wait-Bundle-Refresh-${#}"/>
            </parallel>
        </group>

        <!-- remove pre-installed up4, install local build -->
        <step name="Up4-App-Uninstall" requires="Onos-Wait-For-Ready"
              exec="onos-app ${OCI} uninstall org.omecproject.up4"/>
        <step name="Up4-App-Wait-For-Uninstalled" requires="^"
              exec="docker-log-grep ${ODI} 'Application org.omecproject.up4 has been uninstalled'"/>
        <step name="Up4-Oar-Exists" requires="^"
              exec="test -f ${UP4_ROOT}/app/app/target/up4-app-1.1.0-SNAPSHOT.oar"/>
        <step name="Up4-App-Install-Local-Build" requires="^" delay="5"
              exec="onos-app ${OCI} reinstall! ${UP4_ROOT}/app/app/target/up4-app-1.1.0-SNAPSHOT.oar"/>

        <parallel var="${OD#}">
            <!-- FIXME: ${OC#} pointing to the same instance localhost, should we use a container that can resolve onos1/2/3 hostnames? -->
            <step name="Onos-Check-Up4-App-${#}"
                  exec="onos-check-apps ${OC#} org.omecproject.up4 includes"
                  requires="Up4-App-Install-Local-Build"/>
            <step name="Up4-Set-Log-Debug-${#}"
                  exec="onos ${OC#} log:set DEBUG org.omecproject.up4"
                  requires="Onos-Check-Up4-App-${#}"/>
            <step name="Onos-Enable-Grpc-Log-${#}"
                  exec="onos ${OC#} cfg set org.onosproject.grpc.ctl.GrpcChannelControllerImpl enableMessageLog true"
                  requires="Onos-Check-Up4-App-${#}"/>
            <step name="Onos-Check-Components-${#}" exec="onos-check-components ${OC#}"
                  delay="5" requires="Onos-Check-Up4-App-${#}"/>
            <!-- FIXME: re-enable log checking after bundle refresh will be fixed in ONOS 2.5
                 Bundle refresh causes many exception that are deemed non harmful. Since we also
                 check component status in the previous steps, we have enough confidence that the
                 system is a in a good state at this point...
            <step name="Onos-Check-Logs-${#}" exec="onos-check-logs ${OD#}"
                  requires="Onos-Check-Components-${#}"/>
            -->
        </parallel>
    </group>
</scenario>