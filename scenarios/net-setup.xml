<!--
 ~ SPDX-License-Identifier: Apache-2.0
 ~ SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
  -->
<scenario name="net-setup" description="Network setup">
    <group name="Net-Setup">
        <!-- FIXME: support wipe-out with P4Runtime devices in ONOS.
                There's an issue with deleting groups-->
        <!--<step name="Wipe-Out-Data-Before" exec="onos-wipe-out" />-->
        <step name="Initial-Summary-Check"
              exec="onos-check-summary ${OCI} [0-9]* 0 0 0"/>
        <step name="Push-Netcfg" requires="Initial-Summary-Check"
              exec="onos-netcfg ${OCI} ${TOPO_NETCFG}"/>
        <!-- ${SWITCHES} devices, ${LINKS} links (unidirectional), ${HOSTS} hosts (see .env.stc-*) -->
        <step name="Check-Summary" requires="Push-Netcfg"
              exec="onos-check-summary ${OCI} [0-9]* ${SWITCHES} ${LINKS} ${HOSTS}"/>
        <!-- Like in a production deployment, we assume dbuf can change its dataplane address. We
        push the wrong one here, then push the correct one in *-buffering.xml  -->
        <step name="Push-Netcfg-Dbuf-Wrong" requires="Check-Summary"
              exec="onos-netcfg ${OCI} ${UP4_ROOT}/scenarios/topo/netcfg-dbuf-wrong.json"/>
        <!-- Wait enough time for segmentrouting to generate all necessary flow objectives -->
        <step name="Check-Flows" requires="Push-Netcfg-Dbuf-Wrong" delay="5"
              exec="onos-check-flows ${OCI}"/>
        <!-- Verify basic connectivity across the fabric -->
        <step name="Pdn-Ping-Enb" requires="Check-Flows" exec="mn-cmd pdn ping -c5 140.0.100.1"/>
        <!-- Verify route for downlink traffic -->
        <parallel var="${OD#}">
            <step name="Check-Dbuf-Ready-${#}" requires="Check-Summary"
                  exec="docker-log-grep ${ODI} 'Dbuf service at mininet:10000 is READY=true'"
                  delay="10"/>
        </parallel>
    </group>
</scenario>